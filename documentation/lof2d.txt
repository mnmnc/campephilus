Help on module modules.detector.lof2d in modules.detector:

NAME
    modules.detector.lof2d

CLASSES
    builtins.object
        LOF2D
    
    class LOF2D(builtins.object)
     |  Methods defined here:
     |  
     |  __init__(self, points)
     |  
     |  calculate_lof(self)
     |      Calculates LOF for all points.
     |      Updates local LOF dictionary with results.
     |      :return:
     |  
     |  calculate_lrd(self)
     |      Calculates local reachability density for each point.
     |      Updates LRD dictionary with results.
     |      :return:
     |  
     |  create_distance_dictionary(self)
     |      Creates a dictionary of distances between all points
     |      :return:
     |  
     |  get_knn(self, k=3)
     |      Limits previously created distances dictionary so that it will contain
     |      only neighbours with distance equal or closer than k neighbour.
     |      :param k: number that specifies which neighbour distance should designate the threshold
     |      :return:
     |  
     |  get_top(self, number)
     |  
     |  print_k_distances(self)
     |  
     |  print_lof(self)
     |  
     |  print_neighbours(self)
     |  
     |  sort_lof(self)
     |      Sorts LOF data based on LOF value, descendingly
     |      :return: list of tuples ( (x, y), lof_value )
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FUNCTIONS
    main()

FILE
    d:\prv\git\campephilus\modules\detector\lof2d.py


